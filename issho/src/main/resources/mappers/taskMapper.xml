<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.softsociety.issho.task.dao.TaskDAO">

	<!-- * 테스크 전체 검색 -->
	<select id="SelectAllTask" parameterType="String"
		resultType="Task">
		select
		task.task_seq AS task_seq
		,task.prj_domain AS
		prj_domain
		,task.task_name AS task_name
		,task.task_content AS
		task_content
		,task.task_sender AS task_sender
		,task.task_rank AS
		task_rank
		,task.task_state AS task_state
		,to_char(task.task_inputdate,
		'YYYY-MM-DD') AS task_inputdate
		,to_char(task.task_startdate,
		'YYYY-MM-DD') AS task_startdate
		,to_char(task.task_enddate,
		'YYYY-MM-DD') AS task_enddate
		,to_char(task.exp_startdate,
		'YYYY-MM-DD') AS exp_startdate
		,to_char(task.exp_enddate, 'YYYY-MM-DD')
		AS exp_enddate
		,task.ptask_num AS ptask_num
		,memb.memb_name AS memb_name
		from
		task task, members memb
		where
		task.task_sender = memb.memb_mail
		AND
		task.prj_domain = #{prj_domain}
	</select>

	<!-- 신승훈 * 태스크 네비게이터 -->
	<select id="countTask" parameterType="map" resultType="int">
		SELECT
		count(*)
		FROM
		task t, bookmark bm
		WHERE
		bm.task_seq(+) = t.task_seq
		AND t.prj_domain = #{prj_domain}
		<if test="bookmark != null">
			AND t.task_seq IN (SELECT
			task_seq
			FROM
			bookmark
			WHERE
			memb_mail=#{bookmark})
		</if>
		<if test="searchWord != null">
			AND (t.task_name LIKE '%' || #{searchWord} || '%' OR
			t.task_content LIKE
			'%' || #{searchWord} || '%' OR t.task_sender LIKE
			'%' ||
			#{searchWord} || '%')
		</if>
	</select>

	<!-- 신승훈 * 태스크 상세보기 -->
	<select id="selectTaskByTaskSeq" parameterType="Integer"
		resultType="Task">
		select
			t.task_seq AS task_seq
			,t.prj_domain AS prj_domain
			,t.task_name AS task_name
			,t.task_content AS task_content
			,t.task_sender AS task_sender
			,t.task_rank AS task_rank
			,t.task_state AS task_state
			,t.task_inputdate AS task_inputdate
			,t.task_startdate AS task_startdate
			,t.task_enddate AS task_enddate
			,t.exp_startdate AS exp_startdate
			,t.exp_enddate AS exp_enddate
			,t.ptask_num AS ptask_num
			,ROUND(AVG(ts.tsuper_perform)) AS performAvg
		from
			task t, taskstaff ts
		where
			t.task_seq = #{task_seq}
			AND 
			ts.task_seq = t.task_seq
		GROUP BY 
		 	t.task_seq
		 	,t.prj_domain 
		 	,t.task_name
			,t.task_content
			,t.task_sender
			,t.task_rank
			,t.task_state
			,t.task_inputdate
			,t.task_startdate
			,t.task_enddate
			,t.exp_startdate
			,t.exp_enddate
			,t.ptask_num				
	</select>

	<!-- 신승훈 * 테스크 스태프 리스트 조회 -->
	<select id="selectStaff" parameterType="Integer"
		resultType="TaskStaff">
		select
		task_seq
		,memb_mail
		,tsuper_perform
		from
		taskstaff
		where
		task_seq = #{task_seq}
	</select>

	<!-- 신승훈 * 테스크 조건 조회 -->
   <select id="selectTaskAll"  parameterType="map" resultType="Task">
      SELECT 
         t.task_seq AS task_seq
         ,t.prj_domain AS prj_domain
         ,t.task_name AS task_name
         ,t.task_content AS task_content
         ,t.task_sender AS task_sender
         ,t.task_rank AS task_rank
         ,t.task_state AS task_state
         ,t.task_inputdate AS task_inputdate
         ,t.task_startdate AS task_startdate
         ,t.task_enddate AS task_enddate
         ,t.exp_startdate AS exp_startdate
         ,t.exp_enddate AS exp_enddate
         ,t.ptask_num AS ptask_num
         ,bm.memb_mail AS bookmark_memb_mail
         ,m.memb_name AS memb_name
         ,ROUND(AVG(ts.tsuper_perform)) AS performAvg
      FROM 
         task t, bookmark bm, members m, taskstaff ts
      WHERE 
         t.prj_domain = #{prj_domain}
         AND bm.task_seq(+) = t.task_seq
         AND t.task_sender = m.memb_mail
         AND ts.task_seq = t.task_seq
         <if test="bookmark != null">
            AND t.task_seq IN (SELECT
                                       task_seq
                                   FROM
                                       bookmark
                                   WHERE
                                       memb_mail=#{bookmark})
         </if>
         <if test="searchWord != null">
            AND (t.task_name LIKE '%' || #{searchWord} || '%' OR t.task_content LIKE '%' || #{searchWord} || '%' OR t.task_sender LIKE '%' || #{searchWord} || '%')
         </if>
         GROUP BY 
                t.task_seq
                ,t.prj_domain 
                ,t.task_name
               ,t.task_content
               ,t.task_sender
               ,t.task_rank
               ,t.task_state
               ,t.task_inputdate
               ,t.task_startdate
               ,t.task_enddate
               ,t.exp_startdate
               ,t.exp_enddate
               ,t.ptask_num
               ,bm.memb_mail
               ,m.memb_name
         <if test="task_staff == null and task_sender == null and task_rank == null and task_state == null and bookmark == null and searchWord == null">
            ORDER BY t.task_seq DESC
         </if>
         <if test="task_staff != null or task_sender != null or task_rank != null or task_state != null">
            ORDER BY
         </if>
         <if test="task_sender != null">
               (CASE WHEN t.task_sender = #{task_sender} THEN 1 ELSE 2 END)
         </if>   
         <if test="task_staff != null">
            <if test="task_sender != null">
               , (CASE WHEN t.task_seq IN (SELECT
                                                    task_seq
                                                FROM
                                                    taskstaff
                                                WHERE
                                                    memb_mail = #{task_staff})  THEN 1 ELSE 2 END)
            </if>
            <if test="task_sender == null">
               (CASE WHEN t.task_seq IN (SELECT
                                                    task_seq
                                                FROM
                                                    taskstaff
                                                WHERE
                                                    memb_mail = #{task_staff})  THEN 1 ELSE 2 END)
            </if>
         </if>
         <if test="task_rank != null">
            <if test="task_staff != null or task_sender != null">
               , t.task_rank DESC
            </if>
            <if test="task_staff == null and task_sender == null">
               t.task_rank DESC
            </if>
         </if>
         
         <if test="task_state != null">
            <if test="task_staff != null or task_sender != null or task_rank != null">
               , t.task_state DESC
            </if>
            <if test="task_staff == null and task_sender == null and task_rank == null">
               t.task_state DESC
            </if>
         </if>
   </select>

	<!-- 신승훈 * 즐겨찾기 추가 -->
	<insert id="insertBookmark" parameterType="Bookmark">
		insert
		into
		Bookmark (
		Bookmark_seq
		, task_seq
		, memb_mail
		)
		values (
		Bookmark_seq.nextval
		,
		#{task_seq}
		, #{memb_mail}
		)
	</insert>

	<!-- 신승훈 * 즐겨찾기 추가 -->
	<delete id="deleteBookmark" parameterType="Bookmark">
		delete
		from
		Bookmark
		where
		task_seq = #{task_seq}
		AND
		memb_mail = #{memb_mail}
	</delete>

	<!-- 신승훈 * 즐겨찾기 유무 확인 -->
	<select id="selectBookmark" parameterType="Bookmark"
		resultType="Bookmark">
		select
		Bookmark_seq
		from
		Bookmark
		where
		task_seq = #{task_seq}
		AND
		memb_mail = #{memb_mail}
	</select>

	<!-- 신승훈 * 수행도 변경 -->
	<update id="updatePerform" parameterType="TaskStaff">
		update taskstaff
		set
		tsuper_perform = #{tsuper_perform}
		where
		task_seq = #{task_seq}
		AND
		memb_mail = #{memb_mail}
	</update>


	<!-- 신승훈 * 진행상태 변경 -->
	<update id="stateChange" parameterType="Task">
		update Task
		set
		task_state
		= #{task_state}
		where
		task_seq = #{task_seq}
	</update>

	<!-- 신승훈 * 상세보기 첨부파일 확인 -->
	<select id="selectTaskFile" parameterType="String"
		resultType="Taskfile">
		select
		*
		from
		taskfile
		where
		task_seq = #{task_seq}
	</select>

	<!-- 신승훈 * 상세보기 첨부파일 다운로드 -->
	<select id="selectTaskFileByTfileSeq" parameterType="String"
		resultType="Taskfile">
		select
		*
		from
		taskfile
		where
		tfile_seq = #{tfile_seq}
	</select>

	<!-- 신승훈 메인창 목록 (할당 태스크 현황) -->
	<select id="selectMainMysender" parameterType="Map"
		resultType="Task">
	<![CDATA[
	select 
		*
    FROM
        (select 
            task_seq,
            task_name,
            task_state
        from 
            task
        where 
            prj_domain = #{prj_domain}
        AND	
            task_sender = #{task_sender}
        ORDER BY task_seq DESC)
	WHERE
		ROWNUM <= 4
	]]>
	</select>

	<!-- 신승훈 메인창 목록 담당 태스크 리스트) -->
	<select id="selectMainMyStaff" parameterType="String"
		resultType="Task">
	<![CDATA[
		select 
			*
	    FROM
	        (select 
	            t.task_name, t.task_state
	        from 
	            task t, taskstaff ts
	        where 
	            t.prj_domain = #{prj_domain}
	            AND ts.task_seq(+) = t.task_seq
				AND ts.memb_mail = #{task_sender}
	        ORDER BY ts.task_seq DESC)
		WHERE
			ROWNUM <= 4
	]]>
	</select>



	<!-- 태스크 추가 -->
	<insert id="addNewTask" parameterType="Task">
		<!-- 구문 실행 후 방금 넣은 데이터의 아이디를 조회하자 -->
		<selectKey keyProperty="task_seq" resultType="int"
			order="BEFORE">
			SELECT task_seq.nextval FROM DUAL
		</selectKey>

		INSERT INTO task(task_seq, prj_domain, task_name, task_content,
		task_sender, task_rank, task_state,
		task_inputdate,
		<if test="task_startdate != null">
			task_startdate,
		</if>
		<if test="task_enddate != null">
			task_enddate,
		</if>
		<if test="exp_startdate != null">
			exp_startdate,
		</if>
		<if test="exp_enddate != null">
			exp_enddate,
		</if>
		ptask_num
		)
		VALUES(#{task_seq}, #{prj_domain}, #{task_name},
		#{task_content},
		#{task_sender}, #{task_rank}, #{task_state},
		sysdate,
		<if test="task_startdate != null">
			#{task_startdate},
		</if>
		<if test="task_enddate != null">
			#{task_enddate},
		</if>
		<if test="exp_startdate != null">
			#{exp_startdate},
		</if>
		<if test="exp_enddate != null">
			#{exp_enddate},
		</if>
		#{ptask_num})
	</insert>

	<!-- 태스크 담당자 추가 -->
	<insert id="addStaffs" parameterType="Taskstaff">
		INSERT INTO taskstaff
		VALUES(#{task_seq}, #{memb_mail}, #{tsuper_perform})
	</insert>

	<!-- 태스크 파일 추가 -->
	<insert id="addFiles" parameterType="Taskfile">
		INSERT INTO taskfile
		VALUES(tfile_seq.nextval, #{task_seq}, #{tfile_ogfile},
		#{tfile_savefile})
	</insert>

	<!-- 태스크 상태 변경 -->
	<update id="changeState" parameterType="map">
		UPDATE task
		SET task_state = #{task_state}
		<if test="task_state == '0'">
			,task_startdate = null
			,task_enddate = null
		</if>
		<if test="task_state == '1'">
			,task_startdate = sysdate
			,task_enddate = null
		</if>
		<if test="task_state == '2'">
			,task_enddate = sysdate
		</if>
		<if test="task_state == '3'">
			,task_enddate = null
		</if>
		WHERE task_seq = #{task_seq}
	</update>

	<select id="projectMembers" parameterType="String"
		resultType="Taskstaff">
		SELECT s.task_seq as task_seq, m.memb_ogfile as
		memb_ogfile, m.memb_name as memb_name,
		s.memb_mail
		FROM task t,
		taskstaff s, members m
		WHERE s.memb_mail = m.memb_mail
		AND s.task_seq =
		t.task_seq
		AND t.prj_domain = #{prj_domain}
	</select>

	<select id="myAllocate" parameterType="map" resultType="Task">
		SELECT *
		FROM task
		WHERE prj_domain = #{prj_domain}
		AND task_sender =
		#{memb_mail}
	</select>

	<select id="myCharged" parameterType="map" resultType="Task">
		SELECT
		t.task_seq AS task_seq
		,t.prj_domain AS
		prj_domain
		,t.task_name AS
		task_name
		,t.task_content AS
		task_content
		,t.task_sender AS task_sender
		,t.task_rank AS
		task_rank
		,t.task_state AS
		task_state
		,t.task_inputdate AS
		task_inputdate
		,t.task_startdate AS
		task_startdate
		,t.task_enddate AS
		task_enddate
		,t.exp_startdate AS
		exp_startdate
		,t.exp_enddate AS
		exp_enddate
		,t.ptask_num AS ptask_num
		,s.memb_mail AS memb_mail
		FROM task
		t, taskstaff s
		WHERE t.task_seq = s.task_seq
		AND t.prj_domain =
		#{prj_domain}
		AND s.memb_mail = #{memb_mail}
	</select>

	<select id="SelectAlltaskMG" parameterType="map"
		resultType="Task">
		SELECT
		t.task_seq
		,t.task_name
		,t.task_state
		,t.task_rank
		,t.task_startdate
		,t.task_enddate
		,LISTAGG(m.memb_name, ',') WITHIN
		GROUP (ORDER BY m.memb_name) AS taskMembList
		FROM
		task t, taskstaff s,
		members m
		WHERE
		t.task_seq = s.task_seq
		AND m.memb_mail = s.memb_mail
		AND
		t.prj_domain = #{prj_domain}
		group by
		t.task_seq
		,t.task_name
		,t.task_state
		,t.task_rank
		,t.task_startdate
		,t.task_enddate
		
	</select>



	<update id="changeDate" parameterType="GanttTask">
		UPDATE task
		SET
		<if test="task_startdate != null and task_enddate != null">
			task_startdate = #{task_startdate},
			task_enddate =
			#{task_enddate}
		</if>
		<if test="exp_startdate != null and exp_enddate != null">
			exp_startdate = #{exp_startdate},
			exp_enddate =
			#{exp_enddate}
		</if>
		WHERE task_seq = #{task_seq}
	</update>

	<insert id="insertComment" parameterType="taskReply">
		<selectKey keyProperty="treply_seq" resultType="int"
			order="BEFORE">
			SELECT treply_seq.nextval FROM DUAL
		</selectKey>


		INSERT INTO taskReply
		(treply_seq, task_seq, treply_writer,
		treply_content, treply_inputdate)
		VALUES (#{treply_seq},
		#{task_seq},
		#{treply_writer},
		#{treply_content}, sysdate)
	</insert>

	<!-- 멘션 추가 -->

	<insert id="insertMention" parameterType="Mention">
		INSERT INTO mention
		VALUES(MENT_SEQ.nextval, #{treply_seq}, #{ment_sender})
	</insert>

	<select id="replyList" resultType="TaskReply">
		SELECT m.ment_seq AS
		ment_seq, m.treply_seq AS treply_seq, m.ment_sender AS ment_sender,
		t.task_seq AS task_seq, t.treply_writer AS treply_writer,
		t.treply_content AS treply_content,t.treply_inputdate AS
		treply_inputdate
		FROM mention m, taskreply t
		WHERE m.treply_seq(+) = t.treply_seq
	</select>



</mapper>